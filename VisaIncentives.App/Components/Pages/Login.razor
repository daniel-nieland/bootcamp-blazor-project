@page "/login"
@inject NavigationManager Navigator
@inject IElementHandler ElementHandler

<PageTitle>Login</PageTitle>

<main class="content">
    <section class="hero">
        <section class="header-bar">
            <img class="header-logo" src="resources/images/logos/visa-logo-white-1150x122.png" alt="Logo" @onclick=@(() => Navigator.NavigateTo("/"))/>
        </section>
        <section class="split-section">
            <section class="split-left">
                <section class="left-side-items">
                    <label for="email"><b>Email</b></label>
                    <input @ref=_emailInputRef
                           class="@CssClassInvalidLogin"
                           id="email"
                           type="text" 
                           placeholder="Enter Email"
                           name="email" 
                           required
                    >

                    <label for="pass"><b>Password</b></label>
                    <input @ref=_passwordInputRef
                           class="@CssClassInvalidLogin"
                           id="pass" 
                           type="password" 
                           placeholder="Enter Password" 
                           name="pass" 
                           required
                    >
                    
                    <section class="password-controls">
                        <div class="remember-checkbox-container">
                            <input id="remember-checkbox" type="checkbox" name="remember">
                            <label for="remember-checkbox" class="remember-me">Remember Me</label>
                        </div>
                    
                        <a class="forgot-pass" href="/login">Forgot Password</a>
                    </section>
 
                    <button @onclick=@(() => ValidateLogin()) type="submit" class="sign-in-button lsi @SwapBlueOrange">Sign In</button>
                    <span class="create-acct lsi">Don't have an account? <a href="/login">Sign up for free</a></span>
                </section>
            </section>
            <section class="split-right">
                <section class="text-section">
                    <h3>Engage Your Cardholders</h3>
                    <p>With more ways to earn and redeem points</p>
                </section>
            </section>
        </section>
        
    </section>
</main>

@code {
    ElementReference _emailInputRef;
    ElementReference _passwordInputRef;

    string CssClassInvalidLogin { get; set; } = null;
    string SwapBlueOrange { get; set; } = "Blue";

    /// <summary>
    /// Validates the user's credentials
    /// </summary>
    /// <remarks>Currently hardcoded to dev@bofa.com and password123</remarks>
    public async Task ValidateLogin()
    {
        // use await ElementHandler.GetPropertyAsync<string>(put ref here, "value")
        string loginEmail = await ElementHandler.GetPropertyAsync<string>(_emailInputRef, "value");
        string loginPass = await ElementHandler.GetPropertyAsync<string>(_passwordInputRef, "value");

        // Hardcoded login credentials
        string hardEmail = "dev@bofa.com";
        string hardPass = "password123";

        // Perform validation
        if (loginEmail.ToLower().Equals(hardEmail) && loginPass.Equals(hardPass))
        {
            // Valid, reroute to dashboard page
            CssClassInvalidLogin = null;
            Navigator.NavigateTo("/dashboard");
        } else
        {
            // Invalid, stay and show red outlines
            CssClassInvalidLogin = "InvalidLogin";
            SwapBlueOrange = "Orange";
        }
    }
}
